/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var messages_movementMessage_pb = require('../messages/movementMessage_pb.js');
var messages_switchGunMessage_pb = require('../messages/switchGunMessage_pb.js');
var messages_shootMessage_pb = require('../messages/shootMessage_pb.js');
var messages_stopMessage_pb = require('../messages/stopMessage_pb.js');
var messages_pingMessage_pb = require('../messages/pingMessage_pb.js');
goog.exportSymbol('proto.messages.v1.PlayerUpdate', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.messages.v1.PlayerUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.messages.v1.PlayerUpdate.oneofGroups_);
};
goog.inherits(proto.messages.v1.PlayerUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.messages.v1.PlayerUpdate.displayName = 'proto.messages.v1.PlayerUpdate';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.messages.v1.PlayerUpdate.oneofGroups_ = [[2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.messages.v1.PlayerUpdate.DataCase = {
  DATA_NOT_SET: 0,
  MOVEMENT: 2,
  SWITCHGUN: 3,
  SHOOT: 4,
  STOP: 5,
  PING: 6
};

/**
 * @return {proto.messages.v1.PlayerUpdate.DataCase}
 */
proto.messages.v1.PlayerUpdate.prototype.getDataCase = function() {
  return /** @type {proto.messages.v1.PlayerUpdate.DataCase} */(jspb.Message.computeOneofCase(this, proto.messages.v1.PlayerUpdate.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.messages.v1.PlayerUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.messages.v1.PlayerUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.messages.v1.PlayerUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.messages.v1.PlayerUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    movement: (f = msg.getMovement()) && messages_movementMessage_pb.MovementMessage.toObject(includeInstance, f),
    switchgun: (f = msg.getSwitchgun()) && messages_switchGunMessage_pb.SwitchGunMessage.toObject(includeInstance, f),
    shoot: (f = msg.getShoot()) && messages_shootMessage_pb.ShootMessage.toObject(includeInstance, f),
    stop: (f = msg.getStop()) && messages_stopMessage_pb.Stopmessage.toObject(includeInstance, f),
    ping: (f = msg.getPing()) && messages_pingMessage_pb.PingMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.messages.v1.PlayerUpdate}
 */
proto.messages.v1.PlayerUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.messages.v1.PlayerUpdate;
  return proto.messages.v1.PlayerUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.messages.v1.PlayerUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.messages.v1.PlayerUpdate}
 */
proto.messages.v1.PlayerUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerid(value);
      break;
    case 2:
      var value = new messages_movementMessage_pb.MovementMessage;
      reader.readMessage(value,messages_movementMessage_pb.MovementMessage.deserializeBinaryFromReader);
      msg.setMovement(value);
      break;
    case 3:
      var value = new messages_switchGunMessage_pb.SwitchGunMessage;
      reader.readMessage(value,messages_switchGunMessage_pb.SwitchGunMessage.deserializeBinaryFromReader);
      msg.setSwitchgun(value);
      break;
    case 4:
      var value = new messages_shootMessage_pb.ShootMessage;
      reader.readMessage(value,messages_shootMessage_pb.ShootMessage.deserializeBinaryFromReader);
      msg.setShoot(value);
      break;
    case 5:
      var value = new messages_stopMessage_pb.Stopmessage;
      reader.readMessage(value,messages_stopMessage_pb.Stopmessage.deserializeBinaryFromReader);
      msg.setStop(value);
      break;
    case 6:
      var value = new messages_pingMessage_pb.PingMessage;
      reader.readMessage(value,messages_pingMessage_pb.PingMessage.deserializeBinaryFromReader);
      msg.setPing(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.messages.v1.PlayerUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.messages.v1.PlayerUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.messages.v1.PlayerUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.messages.v1.PlayerUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMovement();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      messages_movementMessage_pb.MovementMessage.serializeBinaryToWriter
    );
  }
  f = message.getSwitchgun();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      messages_switchGunMessage_pb.SwitchGunMessage.serializeBinaryToWriter
    );
  }
  f = message.getShoot();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      messages_shootMessage_pb.ShootMessage.serializeBinaryToWriter
    );
  }
  f = message.getStop();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      messages_stopMessage_pb.Stopmessage.serializeBinaryToWriter
    );
  }
  f = message.getPing();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      messages_pingMessage_pb.PingMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional string playerId = 1;
 * @return {string}
 */
proto.messages.v1.PlayerUpdate.prototype.getPlayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.messages.v1.PlayerUpdate.prototype.setPlayerid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional MovementMessage movement = 2;
 * @return {?proto.messages.v1.MovementMessage}
 */
proto.messages.v1.PlayerUpdate.prototype.getMovement = function() {
  return /** @type{?proto.messages.v1.MovementMessage} */ (
    jspb.Message.getWrapperField(this, messages_movementMessage_pb.MovementMessage, 2));
};


/** @param {?proto.messages.v1.MovementMessage|undefined} value */
proto.messages.v1.PlayerUpdate.prototype.setMovement = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.messages.v1.PlayerUpdate.oneofGroups_[0], value);
};


proto.messages.v1.PlayerUpdate.prototype.clearMovement = function() {
  this.setMovement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.messages.v1.PlayerUpdate.prototype.hasMovement = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SwitchGunMessage switchGun = 3;
 * @return {?proto.messages.v1.SwitchGunMessage}
 */
proto.messages.v1.PlayerUpdate.prototype.getSwitchgun = function() {
  return /** @type{?proto.messages.v1.SwitchGunMessage} */ (
    jspb.Message.getWrapperField(this, messages_switchGunMessage_pb.SwitchGunMessage, 3));
};


/** @param {?proto.messages.v1.SwitchGunMessage|undefined} value */
proto.messages.v1.PlayerUpdate.prototype.setSwitchgun = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.messages.v1.PlayerUpdate.oneofGroups_[0], value);
};


proto.messages.v1.PlayerUpdate.prototype.clearSwitchgun = function() {
  this.setSwitchgun(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.messages.v1.PlayerUpdate.prototype.hasSwitchgun = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ShootMessage shoot = 4;
 * @return {?proto.messages.v1.ShootMessage}
 */
proto.messages.v1.PlayerUpdate.prototype.getShoot = function() {
  return /** @type{?proto.messages.v1.ShootMessage} */ (
    jspb.Message.getWrapperField(this, messages_shootMessage_pb.ShootMessage, 4));
};


/** @param {?proto.messages.v1.ShootMessage|undefined} value */
proto.messages.v1.PlayerUpdate.prototype.setShoot = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.messages.v1.PlayerUpdate.oneofGroups_[0], value);
};


proto.messages.v1.PlayerUpdate.prototype.clearShoot = function() {
  this.setShoot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.messages.v1.PlayerUpdate.prototype.hasShoot = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Stopmessage stop = 5;
 * @return {?proto.messages.v1.Stopmessage}
 */
proto.messages.v1.PlayerUpdate.prototype.getStop = function() {
  return /** @type{?proto.messages.v1.Stopmessage} */ (
    jspb.Message.getWrapperField(this, messages_stopMessage_pb.Stopmessage, 5));
};


/** @param {?proto.messages.v1.Stopmessage|undefined} value */
proto.messages.v1.PlayerUpdate.prototype.setStop = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.messages.v1.PlayerUpdate.oneofGroups_[0], value);
};


proto.messages.v1.PlayerUpdate.prototype.clearStop = function() {
  this.setStop(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.messages.v1.PlayerUpdate.prototype.hasStop = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PingMessage ping = 6;
 * @return {?proto.messages.v1.PingMessage}
 */
proto.messages.v1.PlayerUpdate.prototype.getPing = function() {
  return /** @type{?proto.messages.v1.PingMessage} */ (
    jspb.Message.getWrapperField(this, messages_pingMessage_pb.PingMessage, 6));
};


/** @param {?proto.messages.v1.PingMessage|undefined} value */
proto.messages.v1.PlayerUpdate.prototype.setPing = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.messages.v1.PlayerUpdate.oneofGroups_[0], value);
};


proto.messages.v1.PlayerUpdate.prototype.clearPing = function() {
  this.setPing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.messages.v1.PlayerUpdate.prototype.hasPing = function() {
  return jspb.Message.getField(this, 6) != null;
};


goog.object.extend(exports, proto.messages.v1);
